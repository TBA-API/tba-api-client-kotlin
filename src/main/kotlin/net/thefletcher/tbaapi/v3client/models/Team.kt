/**
* The Blue Alliance API v3
* # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
*
* OpenAPI spec version: 3.03.1
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package net.thefletcher.tbaapi.v3client.models


/**
 * 
 * @param key TBA team key with the format `frcXXXX` with `XXXX` representing the team number.
 * @param team_number Official team number issued by FIRST.
 * @param nickname Team nickname provided by FIRST.
 * @param name Official long name registered with FIRST.
 * @param city City of team derived from parsing the address registered with FIRST.
 * @param state_prov State of team derived from parsing the address registered with FIRST.
 * @param country Country of team derived from parsing the address registered with FIRST.
 * @param address Will be NULL, for future development.
 * @param postal_code Postal code from the team address.
 * @param gmaps_place_id Will be NULL, for future development.
 * @param gmaps_url Will be NULL, for future development.
 * @param lat Will be NULL, for future development.
 * @param lng Will be NULL, for future development.
 * @param location_name Will be NULL, for future development.
 * @param website Official website associated with the team.
 * @param rookie_year First year the team officially competed.
 * @param motto Team's motto as provided by FIRST.
 * @param home_championship Location of the team's home championship each year as a key-value pair. The year (as a string) is the key, and the city is the value.
 */
data class Team (
    /* TBA team key with the format `frcXXXX` with `XXXX` representing the team number. */
    val key: kotlin.String,
    /* Official team number issued by FIRST. */
    val team_number: kotlin.Int,
    /* Official long name registered with FIRST. */
    val name: kotlin.String,
    /* First year the team officially competed. */
    val rookie_year: kotlin.Int,
    /* Team nickname provided by FIRST. */
    val nickname: kotlin.String? = null,
    /* City of team derived from parsing the address registered with FIRST. */
    val city: kotlin.String? = null,
    /* State of team derived from parsing the address registered with FIRST. */
    val state_prov: kotlin.String? = null,
    /* Country of team derived from parsing the address registered with FIRST. */
    val country: kotlin.String? = null,
    /* Will be NULL, for future development. */
    val address: kotlin.String? = null,
    /* Postal code from the team address. */
    val postal_code: kotlin.String? = null,
    /* Will be NULL, for future development. */
    val gmaps_place_id: kotlin.String? = null,
    /* Will be NULL, for future development. */
    val gmaps_url: kotlin.String? = null,
    /* Will be NULL, for future development. */
    val lat: kotlin.Double? = null,
    /* Will be NULL, for future development. */
    val lng: kotlin.Double? = null,
    /* Will be NULL, for future development. */
    val location_name: kotlin.String? = null,
    /* Official website associated with the team. */
    val website: kotlin.String? = null,
    /* Team's motto as provided by FIRST. */
    val motto: kotlin.String? = null,
    /* Location of the team's home championship each year as a key-value pair. The year (as a string) is the key, and the city is the value. */
    val home_championship: kotlin.Any? = null
) {

}

